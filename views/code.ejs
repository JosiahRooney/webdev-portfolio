<% include partials/header %>

    <div class="code banner">

        <div class="container">

            <h1><i class="fa fa-flask" aria-hidden="true"></i> Code <small>It's all talk until the code runs</small></h1>

            <p class="lead">Here are some examples of my code. This allows you to get a feel for what my indentation and formatting preferences are, which is probably a deal breaker for some (4 spaces &gt; tabs).</p>

            <ul class="nav nav-tabs" role="tablist">
                <li role="presentation" class="active"><a href="#basic" aria-controls="basic" role="tab" data-toggle="tab">Basic Algorithms</a></li>
                <li role="presentation"><a href="#intermediate" aria-controls="intermediate" role="tab" data-toggle="tab">Intermediate Algorithms</a></li>
                <li role="presentation"><a href="#advanced" aria-controls="advanced" role="tab" data-toggle="tab">Advanced Algorithms</a></li>
                <li role="presentation"><a href="#misc" aria-controls="misc" role="tab" data-toggle="tab">Misc/Fun Code</a></li>
            </ul><!-- .nav.nav-tabs -->

            <div class="code-blocks tab-content">

                <div role="tabpanel" class="tab-pane active" id="basic">

                    <div class="tab-header">
                        <p>Many of these basic algorithms are my code solutions from freecodecamp.com.</p>
                        <p><small><em>If you are currently going through the platform at Free Code Camp, please refrain from spoiling it for yourself by reviewing my code solutions.</em></small></p>
                    </div>

                    <div class="code-block well row">
                        <h3>Reverse a String</h3>
                        <div class="col-md-6">
                            <p><strong>Objective</strong></p>
                            <p>Return the given string, reversed.</p>
                            <p><strong>Explanation</strong></p>
                            <p>Since strings are <span class="hover-info" data-hover="Cannot be changed once defined.">immutable</span>, we need to create a new string and return it instead.</p>
                            <p>After creating a new string, we simply run a reverse for loop through the original string, adding each letter as we go backward.</p>
                            <p>After the loop we return the new, reversed string.</p>
                        </div>
                        <div class="col-md-6">
                            <p><strong>Code</strong></p>
                            <pre>
                                <code class="language-js line-numbers">
                                function reverseString(str) {
                                    var newStr = "";
                                    for (var i = str.length - 1; i >= 0; i--) {
                                        newStr += str[i];
                                    }
                                    return newStr;
                                }
                                </code>
                            </pre>
                            <p><small>My favorite solution is in Python:</small></p>
                            <pre>
                                <code class="language-python line-numbers">
                                    def reverse_string(str):
                                        return str[::-1]
                                </code>
                            </pre>
                        </div>
                        <div class="try-it col-md-12">
                            <p><small><em>Try it Yourself!</em></small></p>
                            <div class="col-md-6">
                                <div class="input-group">
                                    <input type="text" placeholder="Input" class="form-control" id="reverse_string_input">
                                    <span class="input-group-btn">
                                        <button class="btn btn-default" id="reverse_string" type="button">Go</button>
                                    </span>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <input type="text" placeholder="Output" class="form-control" id="reverse_string_output">
                            </div>
                            <script>
                                $('#reverse_string').click(function() {
                                    $('#reverse_string_output').val(reverseString($('#reverse_string_input').val()));
                                    $('#reverse_string_input').val('');
                                })
                            </script>
                        </div>
                    </div><!-- .code-block -->


                    <div class="code-block well row">
                        <h3>Check if String is Palindrome</h3>
                        <div class="col-md-6">
                            <p><strong>Objective</strong></p>
                            <p>See if a given string is a palindrome, ignoring whitespace, special characters, &amp; case.</p>
                            <p><strong>Explanation</strong></p>
                            <p>Since we don't care about <span class="hover-info" data-hover="Spaces between words and line breaks">whitespace</span>, special characters, or case, we just need to bring the string to lowercase and remove all whitespace &amp; special characters, then reverse the string and compare it to the original.</p>
                        </div>
                        <div class="col-md-6">
                            <p><strong>Code</strong></p>
                            <pre>
                                <code class="language-js line-numbers">
                                    function palindrome(str) {
                                        var re = /[\W_]/g;
                                        var lowRegStr = str.toLowerCase().replace(re, '');
                                        var reverseStr = lowRegStr.split('').reverse().join(''); 
                                        return reverseStr === lowRegStr;
                                    }
                                </code>
                            </pre>
                        </div>
                        <div class="try-it col-md-12">
                            <p><small><em>Try it Yourself!</em></small></p>
                            <div class="col-md-6">
                                <div class="input-group">
                                    <input type="text" placeholder="Input" class="form-control" id="check_palindrome_input">
                                    <span class="input-group-btn">
                                        <button class="btn btn-default" id="check_palindrome" type="button">Go</button>
                                    </span>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <input type="text" placeholder="Output" class="form-control" id="check_palindrome_output">
                            </div>
                            <script>
                                $('#check_palindrome').click(function() {
                                    $('#check_palindrome_output').val(palindrome($('#check_palindrome_input').val()));
                                    $('#check_palindrome_input').val('');
                                })
                            </script>
                        </div>
                    </div><!-- .code-block -->


                    <div class="code-block well row">
                        <h3>Find Longest Word</h3>
                        <div class="col-md-6">
                            <p><strong>Objective</strong></p>
                            <p>Return the length of the longest word in a string.</p>
                            <p><strong>Explanation</strong></p>
                            <p>First we split the string into words (splitting on spaces). Then we create a variable for the longest word, set originally to zero.</p>
                            <p>We loop through the array of words, checking each one against the length of the longest. If it is longer, we set the longest to be that word.</p>
                            <p>Finally we return the longest word's length.</p>
                        </div>
                        <div class="col-md-6">
                            <p><strong>Code</strong></p>
                            <pre>
                                <code class="language-js line-numbers">
                                    function findLongestWord(str) {
                                        var arr = str.split(' ');
                                        var longest = 0;
                                        for (var i = 0; i < arr.length; i++) {
                                            if (arr[i].length > longest) {
                                                longest = arr[i].length;
                                            }
                                        }
                                        return longest;
                                    }
                                </code>
                            </pre>
                        </div>
                        <div class="try-it col-md-12">
                            <p><small><em>Try it Yourself!</em></small></p>
                            <div class="col-md-6">
                                <div class="input-group">
                                    <input type="text" placeholder="Input" class="form-control" id="longest_word_input">
                                    <span class="input-group-btn">
                                        <button class="btn btn-default" id="longest_word" type="button">Go</button>
                                    </span>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <input type="text" placeholder="Output" class="form-control" id="longest_word_output">
                            </div>
                            <script>
                                $('#longest_word').click(function() {
                                    $('#longest_word_output').val(findLongestWord($('#longest_word_input').val()));
                                    $('#longest_word_input').val('');
                                })
                            </script>
                        </div>
                    </div><!-- .code-block -->


                    <div class="code-block well row">
                        <h3>Title Case a Sentence</h3>
                        <div class="col-md-6">
                            <p><strong>Objective</strong></p>
                            <p>Convert a given string to title case (each word capitalized).</p>
                            <p><strong>Explanation</strong></p>
                            <p>First we split the string into an array of words, all set to lowercase. Then we loop through that array with a for loop.</p>
                            <p>For each iteration we set the first letter to uppercase and join it with the rest of the word. If the word is within our "ignore" array, we skip it (unless it is the first or last word.</p>
                            <p>Finally we return the array, joined back into a string.</p>
                        </div>
                        <div class="col-md-6">
                            <p><strong>Code</strong></p>
                            <pre>
                                <code class="language-js line-numbers">
                                    function titleCase(str) {
                                        var arr = str.toLowerCase().split(' ');
                                        var ignore = ['a','of','the','in','is','at','with','and'];
                                        for (var i = 0; i < arr.length; i++) {
                                            if (ignore.indexOf(arr[i]) != -1 && i > 0 && i < arr.length - 1)
                                                continue;
                                            arr[i] = arr[i][0].toUpperCase() + arr[i].substr(1);
                                        }
                                        arr = arr.join(' ');
                                        return arr;
                                    }
                                </code>
                            </pre>
                        </div>
                        <div class="try-it col-md-12">
                            <p><small><em>Try it Yourself!</em></small></p>
                            <div class="col-md-6">
                                <div class="input-group">
                                    <input type="text" placeholder="Input" class="form-control" id="title_case_input">
                                    <span class="input-group-btn">
                                        <button class="btn btn-default" id="title_case" type="button">Go</button>
                                    </span>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <input type="text" placeholder="Output" class="form-control" id="title_case_output">
                            </div>
                            <script>
                                $('#title_case').click(function() {
                                    $('#title_case_output').val(titleCase($('#title_case_input').val()));
                                    $('#title_case_input').val('');
                                })
                            </script>
                        </div>
                    </div><!-- .code-block -->


                    <div class="code-block well row">
                        <h3>Truncate a String</h3>
                        <div class="col-md-6">
                            <p><strong>Objective</strong></p>
                            <p>Truncate a string using an <span class="hover-info" data-hover="The three dots used to indicate an unfinished thought in writing (eg. '...').">ellipsis</span>.</p>
                            <p><strong>Explanation</strong></p>
                            <p>This algorithm takes in a string and the number of characters you want to truncate after.</p>
                            <p>If the number to truncate is less than 4, we return a new string that is the old string sliced from the first character to the 'num' character with an ellipsis at the end.</p>
                            <p>Otherwise if the string's length is greater than num + 3 (to accommodate for the ellipsis), then we return the string truncated that way.</p>
                            <p>Lastly, if the string's length is less than num + 3, we simply return the string, untruncated.</p>
                        </div>
                        <div class="col-md-6">
                            <p><strong>Code</strong></p>
                            <pre>
                                <code class="language-js line-numbers">
                                    function truncateString(str, num) {
                                        if (num <= 3) {
                                            return str.slice(0, num) + "...";
                                        } else if (str.length > num + 3) {
                                            return str.slice(0, num - 3) + "...";
                                        }
                                        return str;
                                    }
                                </code>
                            </pre>
                        </div>
                    </div><!-- .code-block -->







                </div><!-- .tab-pane -->

                <div role="tabpanel" class="tab-pane" id="intermediate">

                    <div class="code-block well">
                        <h3>Factorialize a Number</h3>
                        <p>Return the factorial of a given number.</p>
                        <pre>
                            <code class="language-js line-numbers">
                                function factorialize(num) {
                                    if (num <= 1){
                                        return 1;
                                    } else {
                                        return num * factorialize(num - 1);
                                    }
                                }
                            </code>
                        </pre>
                    </div><!-- .code-block -->


                    <div class="code-block well">
                        <h3>Chunk an Array</h3>
                        <p>Split an array into chunks set by the size argument.</p>
                        <pre>
                            <code class="language-js line-numbers">
                                function chunkArrayInGroups(arr, size) {
                                    var temp = [];
                                    var result = [];

                                    for (var i = 0; i < arr.length; i++) {
                                        if (i % size !== size - 1)
                                            temp.push(arr[i]);
                                        else {
                                            temp.push(arr[i]);
                                            result.push(temp);
                                            temp = [];
                                        }
                                    }

                                    if (temp.length !== 0)
                                        result.push(temp);
                                    return result;
                                }
                            </code>
                        </pre>
                    </div><!-- .code-block -->


                    <div class="code-block well">
                        <h3>Sum All Numbers in a Range</h3>
                        <p>Return the sum of all numbers in a range (passed in via an array with two elements).</p>
                        <pre>
                            <code class="language-js line-numbers">
                                function sumAll(arr) {
                                    arr.sort(function(a,b){
                                        return a-b;
                                    });
                                    var sum = 0;
                                    for (var i = arr[0]; i < arr[1]; i++) {
                                        sum += i;
                                    }
                                    sum += arr[1];
                                    return sum;
                                }
                            </code>
                        </pre>
                    </div><!-- .code-block -->


                    <div class="code-block well">
                        <h3>Diff Two Arrays</h3>
                        <p>Return the symmetric difference of the two arrays.</p>
                        <pre>
                            <code class="language-js line-numbers">
                                function diffArray(arr1, arr2) {
                                    var newArr = [];

                                    var arr_1 = arr1.filter(function(val) {
                                        return arr2.indexOf(val) == -1;
                                    });

                                    var arr_2 = arr2.filter(function(val){
                                        return arr1.indexOf(val) == -1;
                                    });

                                    newArr = newArr.concat(arr_1);
                                    newArr = newArr.concat(arr_2);

                                    return newArr;
                                }
                            </code>
                        </pre>
                    </div><!-- .code-block -->


                    <div class="code-block well">
                        <h3>Check if Boolean</h3>
                        <p>Checks if a value is classified as a boolean primitive</p>
                        <pre>
                            <code class="language-js line-numbers">
                                function boolCheck(bool) {
                                    return bool === true || bool === false;
                                }
                            </code>
                        </pre>
                    </div><!-- .code-block -->


                    
                    

                </div><!-- .tab-pane -->
                
                <div role="tabpanel" class="tab-pane" id="advanced">
                    <div class="tab-header">
                        <p>More coming soon!</p>
                    </div>
                </div><!-- .tab-pane -->
                <div role="tabpanel" class="tab-pane" id="misc">
                    <div class="tab-header">
                        <p>More coming soon!</p>
                    </div>
                </div><!-- .tab-pane -->

            </div><!-- .code-blocks -->
        
        </div><!-- .container -->

    </div><!-- .code -->

<% include partials/footer %>